// Benchmark boilerplate generated by Benchmark

import Foundation
import SwiftOwnership
import OSLog

let logHandler = OSLog(subsystem: "asdf", category: .pointsOfInterest)
let signposter = OSSignposter(logHandle: logHandler)
let signpostID = signposter.makeSignpostID()

let file1 = try File(fileURL: URL(fileURLWithPath: "/Users/josipcavar/Downloads/archive/full.csv"))
let file2 = try File(fileURL: URL(fileURLWithPath: "/Users/josipcavar/Downloads/archive/full.csv"))
let file3 = try File(fileURL: URL(fileURLWithPath: "/Users/josipcavar/Downloads/archive/full.csv"))
let file4 = try File(fileURL: URL(fileURLWithPath: "/Users/josipcavar/Downloads/archive/full.csv"))
let file5 = try File(fileURL: URL(fileURLWithPath: "/Users/josipcavar/Downloads/archive/full.csv"))

let nonCopyableState = signposter.beginInterval("non copyable", id: signpostID)
let nonCopyableLongest: String? = try file1.findLongestNonCopyable()
signposter.endInterval("non copyable", nonCopyableState)
print(nonCopyableLongest!.count)

let fileChunkState = signposter.beginInterval("file chunk", id: signpostID)
let fileChunkLongest: String? = try file2.findLongestNoArray(reuse: true)
signposter.endInterval("file chunk", fileChunkState)
print(fileChunkLongest!.count)

let ccharArrayReuseState = signposter.beginInterval("cchar array reuse", id: signpostID)
let ccharArrayReuseLongest: String? = try file3.findLongestCCharArray(reuse: true)
signposter.endInterval("cchar array reuse", ccharArrayReuseState)
print(ccharArrayReuseLongest!.count)

let ccharArrayState = signposter.beginInterval("cchar array", id: signpostID)
let ccharArrayLongest: String? = try file4.findLongestCCharArray(reuse: false)
signposter.endInterval("cchar array", ccharArrayState)
print(ccharArrayLongest!.count)

let naiveState = signposter.beginInterval("naive", id: signpostID)
let naiveLongest: String? = try file5.findLongestNaive()
signposter.endInterval("naive", naiveState)
print(naiveLongest!.count)
